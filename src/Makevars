CUDA_HOME = /usr/local/cuda
R_HOME = /home/konstantin/R/x86_64-pc-linux-gnu-library/3.2

# This defines what the shared object libraries will be
PKG_LIBS= -L/usr/local/cuda-10.0/lib64 -Wl,-rpath,/usr/local/cuda-10.0/lib64 -lcudart -d



R_INC = /usr/share/R/include
RCPP_INC = $(R_HOME)/Rcpp/include

NVCC = $(CUDA_HOME)/bin/nvcc
CUDA_INC = $(CUDA_HOME)/include 
CUDA_LIB = $(CUDA_HOME)/lib64

#########################################

LIBS = -lcudart -d
NVCC_FLAGS = -Xcompiler "-fPIC"  -I$(R_INC) --std=c++11

### Define objects
cu_sources := $(wildcard kernels/*.cu)
cu_sharedlibs := $(patsubst %.cu, %.o,$(cu_sources))

cpp_sources := $(wildcard *.cpp)
cpp_sharedlibs := $(patsubst %.cpp, %.o, $(cpp_sources))

#includes
KERN_INC  = includes/

OBJECTS = $(cu_sharedlibs) $(cpp_sharedlibs)

all : rcppcuda.so

rcppcuda.so: $(OBJECTS)

%.o: %.cpp $(cpp_sources)
	$(CXX) -std=c++11 $< -c -fPIC -I$(R_INC) -I$(RCPP_INC) -I$(CUDA_INC) 

%.o: %.cu $(cu_sources)
	$(NVCC) $(NVCC_FLAGS) -I$(CUDA_INC) $< -c -o $@

