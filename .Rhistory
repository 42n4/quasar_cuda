library(QuasarFitCuda)
m <- matrix(1:81, 9, 9)
m
library(QuasarFitCuda)
cppMatrixAddScalar(m, 0.5)
cppMatrixAddScalar(m, -0.5)
cppMatrixAddScalar(m, -1.5)
cppMatrixAddScalar(m, -1000.5)
cppMatrixAddScalar(m, 1000.5)
cppMatrixAddScalar(m, -.5)
cppMatrixAddScalar(m, 0.5)
cppMatrixAddScalar(m, 0.5)
cppMatrixAddScalar(m, 0.5)
cppMatrixAddScalar(m, 0.5)
cppMatrixAddScalar(m, 0.5)
m
m<-cppMatrixAddScalar(m, 0.5)
cppMatrixAddScalar(m, 0.5)
m<-cppMatrixAddScalar(m, 0.5)
m<-cppMatrixAddScalar(m, 0.5)
m<-cppMatrixAddScalar(m, 0.5)
m
m <- 1:4096*300
length(m)
m <- 1:(4096*300)
length(m)
length(m) / 300
ma <- matrix(m, nrow = 4096, ncol = 300)
cppMatrixAddScalar(m, 0.5)
cppMatrixAddScalar(ma, 0.5)
length(cppMatrixAddScalar(ma, 0.5))
Sys.time()
m1 <- matrix(1:9, 3, 3)
m1 + 1
system.time(ma + 1)
system.time({ma + 1})
system.time({cppMatrixAddScalar(ma, 1)})
ma + 1
system.time({cppMatrixAddScalar(ma, 1)})
system.time({ma + 1})
ma <- matrix(1:(4096*1000), nrow = 4096, ncol = 1000)
system.time({ma + 1})
system.time({cppMatrixAddScalar(ma, 1)})
ma <- matrix(1:(4096*100000), nrow = 4096, ncol = 100000)
system.time({ma + 1})
system.time({cppMatrixAddScalar(ma, 1)})
system.time({cppMatrixAddScalar(ma, 1)})
mam <- cppMatrixAddScalar(ma, 1)
mam[1:3, 2:9]
ma[1:3, 2:9]
ma[1:3, 1:9]
mam[1:3, 1:9]
mam[1:3, 1:9]
ma[1:3, 1:9]
mam <- cppMatrixAddScalar(ma, 2.5)
ma[1:3, 1:9]
mam[1:3, 1:9]
mam1 <- ma + 2.5
mam1[1:3, 1:9]
mat <- matrix(1:9, 3, 3)
cppMatrixAddScalar(mat, 2.5)
cppMatrixAddScalar(ma, 2.5)
cppMatrixAddScalar(ma, 2.5)[1:3, 2:9]
library(QuasarFitCuda)
m1 <- matrix(1:9, 3, 3)
m2 <- matrix(seq(1, 9), 3, 3)
m2
m2 <- matrix(rep(1, 9), 3, 3)
m2
cppMatrixMinusMatrix(m1, m2)
library(QuasarFitCuda)
cppMatrixMinusMatrix(m1, m2)
m1
library(QuasarFitCuda)
library(QuasarFitCuda)
cppMatrixMinusMatrix(m1, m2)
library(QuasarFitCuda)
cppMatrixMinusMatrix(m1, m2)
m1
m2
m1
m1 <- matrix(1:9, 3, 3)
m1
m2
cppMatrixMinusMatrix(m1, m2)
m1
m2 <- matrix(1:9, 3, 3)
cppMatrixMinusMatrix(m1, m2)
m1
m2 <- matrix(rep(1, 9), 3, 3)
cppMatrixMinusMatrix(m1, m2)
cppMatrixMinusMatrix(m1, m1)
library(QuasarFitCuda)
cppMatrixMinusMatrix(m1, m2)
m1
cppMatrixMinusMatrix(m1, m2)
library(QuasarFitCuda)
cppMatrixMinusMatrix(m1, m2)
m1
library(QuasarFitCuda)
library(QuasarFitCuda)
library(QuasarFitCuda)
library(QuasarFitCuda)
m
m1
m <- m1
m
v < c(1, 2, 3)
v <- c(1, 2, 3)
cppMatrixMultiplyCol(m, v)
cppMatrixMultiplyCol(m, 1:4)
cppMatrixMultiplyCol(m, 8:12)
cppMatrixMultiplyCol(m, 8.5:12.5)
8.5:12.5
library(QuasarFitCuda)
library(QuasarFitCuda)
m1
m2 <- matrix(rep(1, 9), 3, 3)
cppMatrixDivideMatrix(m1, m2)
#cppMatrixDivideMatrix(m1, m2)
m1
library(QuasarFitCuda)
cppMatrixDivideMatrix(m1, m2)
m2 <- matrix(rep(0, 9), 3, 3)
cppMatrixDivideMatrix(m1, m2)
m2 <- matrix(rep(2, 9), 3, 3)
cppMatrixDivideMatrix(m1, m2)
